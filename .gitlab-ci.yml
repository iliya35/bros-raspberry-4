# Configuration for Gitlab-CI.

image: ssrs.local:5000/buildroot

before_script:
    - . env_setup.sh

variables:
  # Runner configuration variables:
  TRANSFER_METER_FREQUENCY: "2s"
  CACHE_REQUEST_TIMEOUT: 60
  # Project/pipeline configuration variables:
  BR2_TARGET: raspberrypi4-64
  BR2_OUTPT_IMG: "output/$BR2_TARGET/images"
  BR2_PKG_REDOWNLOAD: "false"
  BR2_TARGET_REBUILD: "false"


.global_job_template: &global_job_template
        tags: [ docker, buildroot]
        only: 
            - schedules
            - web
            - api

stages:
  - build
  - deploy


buildroot-source:
  <<: *global_job_template
  tags: [ buildroot, internet]
  stage: .pre
  needs: []
  script:
    - set_target $BR2_TARGET
    - >
      [ "$BR2_PKG_REDOWNLOAD" == "true" ] && rm -rf downloads/*
    - m -s source
  allow_failure: false
  cache:
      when: 'always'
      policy: pull-push
      key: $CI_COMMIT_REF_SLUG
      paths:
        - downloads

buildroot-build:
  <<: *global_job_template
  stage: build
  needs: [ buildroot-source ]
  script:
    - >
      [ "$BR2_TARGET_REBUILD" == "true" ] && git clean -fxd -e downloads
    - set_target $BR2_TARGET
    - m -s
  allow_failure: false
  cache:
    - when: 'always'
      policy: pull
      key: $CI_COMMIT_REF_SLUG
      paths:
        - downloads
    - when: 'always'
      key: $BR2_TARGET
      paths:
        - output/$BR2_TARGET
  artifacts:
    when: always
    paths:
      - $BR2_OUTPT_IMG/sdcard.img
      # - $BR2_OUTPT_IMG/rpi-firmware
      # - $BR2_OUTPT_IMG/*.dtb
      # - $BR2_OUTPT_IMG/*.bin
      # - $BR2_OUTPT_IMG/*.uimg
      # - $BR2_OUTPT_IMG/*.cpio*
    expire_in: 1 day

deploy_job:
    <<: *global_job_template
    stage: deploy
    needs: 
      - buildroot-build
    script:
        - mkdir ~/.ssh
        - cp $DEPLOY_PRIVATE_KEY ~/.ssh/id_rsa
        - chmod 600 ~/.ssh/id_rsa
        - TIMESTAMP=$(date +%F_%H-%M)
        - DEPLOY_FULL_PATH=$DEPLOY_DIRECTORY/$CI_PROJECT_TITLE/$CI_COMMIT_BRANCH/$TIMESTAMP
        - git log -1 --pretty='format:%h %ad %cn%n   %s%n%n' --date short > $BR2_OUTPT_IMG/DESCRIPTION.txt
        - git submodule foreach "git log -1 --pretty='format:%h %ad %cn%n   %s%n%n' --date short" >> $BR2_OUTPT_IMG/DESCRIPTION.txt
        - >-
            ssh
            -o UserKnownHostsFile=$DEPLOY_SERVER_FP
            -p $DEPLOY_SSH_PORT
            $DEPLOY_USER_AT_SERVER
            mkdir -p $DEPLOY_FULL_PATH
        - >-
           rsync -e "ssh -o UserKnownHostsFile=$DEPLOY_SERVER_FP -p $DEPLOY_SSH_PORT"
           -Pav $BR2_OUTPT_IMG/ $DEPLOY_USER_AT_SERVER:$DEPLOY_FULL_PATH/

